<!DOCTYPE html>

<html ng-app="employeeApp">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <environment include="Development,Production">

        <link href="~/libs/bootstrap/css/bootstrap.css" rel="stylesheet" />
        <link href="~/libs/icons/font/bootstrap-icons.css" rel="stylesheet" />
        <script src="~/libs/bootstrap/js/bootstrap.bundle.js"></script>
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
        <style>
            body {
                font-family: 'Lato', sans-serif;
                padding-top: 70px;
            }

            .main {
                min-height: calc(100vh - 140px);
            }
        </style>
    </environment>

    <script src="~/libs/angularjs/angular.js"></script>
    <script src="~/libs/angularjs/angular-route.js"></script>

    <link href="~/libs/pickers/angular-datepicker.css" rel="stylesheet" />
</head>
<body ng-controller="rootCtrl">
    <nav class="navbar navbar-light bg-white navbar-expand-md fixed-top shadow-sm">
        <div class="container-fluid">
            <a class="navbar-brand" asp-controller="Home" asp-action="Index">Practice-Site</a>
            <div class="navbar-collapse collapse">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="#!/">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#!/departments">Departments</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#!/employees">Employees</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="container-fluid main">
        @RenderBody()
    </div>
    <footer class="container-fluid">
        <p>Footer</p>
    </footer>
    <script src="~/libs/pickers/angular-datepicker.js"></script>
    <script>

        angular.module("employeeApp", ['ngRoute', '720kb.datepicker'])
            .config($routeProvider => {
                $routeProvider
                    .when("/", {
                        templateUrl: "/app/views/home.html"
                    })
                    .when("/departments", {
                        templateUrl: "/app/views/departments.html"
                    })
                    .when("/createDept", {
                        templateUrl: "/app/views/createDept.html"
                    })
                    .when("/editDept/:id", {
                        templateUrl: "/app/views/editDept.html"
                    })
                    .when("/employees", {
                        templateUrl: "/app/views/employees.html"
                    })
                    .when("/createEmployee", {
                        templateUrl: "/app/views/createEmployee.html"
                    })
                    .when("/editEmployee/:id", {
                        templateUrl: "/app/views/editEmployee.html"
                    })
                    .otherwise("/")
            })
            .controller("rootCtrl", ($scope, $http) => {
                //model data

                $scope.model = {};
                $scope.modelError = "";
                //scope vars
                $scope.deptObj = {};
                $scope.empObj = {};
                $scope.delEmpModal = null;
                $scope.delDeptModal = null;
                //fetch departments
                $http.get("/api/departments")
                    .then(r => {
                        console.log(r.data);
                        $scope.model.departments = r.data;
                        $scope.model
                    }, err => {

                    });
                //fetch employees
                $http.get("/api/Employees")
                    .then(r => {
                        console.log(r.data);
                        $scope.model.employees = r.data;
                        //$scope.model.employees.forEach(x => {
                        //    x.joinDate = new Date(x.joinDate);
                        //});
                    }, err => {

                    });
                $scope.getDeptName = id => {
                    var x = $scope.model.departments.find(d => d.departmentId == id);
                    return x.departmentName;
                }
                /////
                $scope.confirmDeptDel = dept => {
                    $scope.deptObj = dept;
                    $scope.delDeptModal = new bootstrap.Modal(document.getElementById('deptDelModal'))
                    $scope.delDeptModal.show();
                }
                $scope.cancelDeptDel = () => {
                    $scope.delDeptModal.hide();
                    $scope.deptObj = {};
                }
                $scope.delDept = () => {
                    $http.delete("/api/departments/" + $scope.deptObj.departmentId)
                        .then(r => {
                            var i = $scope.model.departments.findIndex(dept => dept.departmentId == $scope.deptObj.departmentId);
                            $scope.model.departments.splice(i, 1);


                            $scope.modelError = "Data deleted."
                            $scope.deptObj = {};
                            $scope.delDeptModal.hide();
                        }, err => {
                            $scope.modelError = "Failed to delete data."
                        });
                }
                //////
                $scope.confirmEmpDel = emp => {
                    $scope.empObj = emp;
                    $scope.delEmpModal = new bootstrap.Modal(document.getElementById('empDelModal'))
                    $scope.delEmpModal.show();
                }
                $scope.cancelEmpDel = ()=>{
                    $scope.delEmpModal.hide();
                    $scope.empObj = {};
                }
                $scope.delEmp = () => {
                    $http.delete("/api/Employees/" + $scope.empObj.employeeId)
                        .then(r => {
                            var i = $scope.model.employees.findIndex(emp => emp.employeeId == $scope.empObj.employeeId);
                            $scope.model.employees.splice(i, 1);


                            $scope.modelError = "Data deleted."
                            $scope.empObj = {};
                            $scope.delEmpModal.hide();
                        }, err => {
                            $scope.modelError = "Failed to delete data."
                        });
                }

            });
    </script>
    <script src="~/App/controllers/createDeptCtrl.js"></script>
    <script src="~/App/controllers/editDeptCtrl.js"></script>
    <script src="~/App/controllers/createEmpCtrl.js"></script>
    <script src="~/App/controllers/editEmpCtrl.js"></script>

    @RenderSection("styles", false)
    @RenderSection("scripts", false)
</body>
</html>